<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[numpy中sum函数求和结果维度问题]]></title>
    <url>%2F2017%2F12%2F05%2Fnumpy%E4%B8%ADsum%E5%87%BD%E6%95%B0%E6%B1%82%E5%92%8C%E7%BB%93%E6%9E%9C%E7%BB%B4%E5%BA%A6%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[使用numpy（下面简称np）中的sum函数对某一维度求和时，由于该维度会在求和后变成一个数，所以所得结果的这一维度为空。比如下面的例子： 1234a = np.array([[1,2,3],[4,5,6]])b = np.sum(a,axis=1)print(b.shape)#out: (2,) 所以，对于一个shape为(2,3)的数组，在默认情况下使用np.sum函数求和后得到的结果shape是 (2,)，如果我们想得到的是(2,1)的shape怎么办？比如Ng的深度学习编程练习中Course 1 Assignment 4就要求这样。使用reshape函数当然可以，只是没有必要，太麻烦了一点不优雅。我们可以使用通过设置keepdims参数实现，还是这个例子： 1234a = np.array([[1,2,3],[4,5,6]])b = np.sum(a,axis=1,keepdims=True)print(b.shape)#out: (2,1) (2,1)和(2,)的shape之间不同参见 What's the difference between (N,) and (N,1) in numpy? ---Stackoverflow 这里有个小例子可以帮助理解： 1234567891011a = np.ones((5,))b = np.ones((5,1))print(a)# [1. 1. 1. 1. 1.]print(b)# [[1.]# [1.]# [1.]# [1.]# [1.]]]]></content>
      <tags>
        <tag>tensorflow</tag>
        <tag>numpy</tag>
        <tag>python</tag>
      </tags>
  </entry>
</search>
